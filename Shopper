#include <iostream>
#include <string>
#include <string.h>
#include <conio.h>
using namespace std;

int LogIndex;
const int maxShoppers = 50, maxOwners = 50, maxProds = 15, maxPass = 32;

struct addshopper {
   
	string Country;
	string City;

};
struct num {
	int nump;
}c;
struct cartt {
	int qunatity;
	string buyproduct = { 0 };
	double price;
	double subtotal;

} pcart[100];

struct Product
{
	string productName = { 0 };
	double productPrice = 0;
	string Category = { 0 };
	int Quantity = 0;
};

struct Shop
{
	string ShopName;
	string ShopAddress;
	string Category;
	Product products[maxProds];
};

struct Owner
{
	string Name;
	int ID;
	char Password[maxPass];
	int PassNum;
	int Age;
	string Gender;
	string Address;
	Shop Shops;
} Owners[maxOwners];

struct shopper {
	string name;
	int id;
	char pass[maxPass];
	int passnum;
	int age;
	string gender;
	addshopper address[maxShoppers];
}Shoppers[maxShoppers];


void welcome();
int login();
void registration();
void update(int j);
void SLchoice();
void SEchoice();
void SeifChoice();
void viewproducts();
void search();
void info(int, int);
void chooseproduct();
void addtocart(int x, int y);
void cart();
void del(int j);

int main() {
	registration();
	login();
	return 0;
}
void welcome() {
	int f;
	system("cls");
	cout << " *************************************** ------ WELCOME ------ ************************************************\n" << endl;
	cout << " \n     Press --1-- If You Have An Account.   \n ";
	cout << "    Press --2-- If You Want To Register. \n" << endl;
	cout << " \n Choice :  ";
	cin >> f;
	switch (f)
	{
	case 1:
		system("cls");
		login();
		system("cls");
		SeifChoice();
		break;
	case 2:
		system("cls");
		registration();
		system("cls");
		login();
		system("cls");
		SeifChoice();
		break;
	default:
		cout << " \n Enter Valid Choice  !!!!";
	}

}

void SeifChoice()
{
	int choice;
	cout << "\nPress -- 1-- To search for a product. \n" << "Press --2-- To View All products: \n";

	cout << "Choice : ";
	cin >> choice;
	switch (choice)
	{
	case 1:
		search();
		break;
	case 2:
		viewproducts();
		break;
	}


}

void viewproducts()
{
	char flag;
	do {
		int number = 1;
		cout << "- Product Name -\t" << "- Product Price  -\t" << "- Product Category -\t" << "- Product Quantity -\n" << endl;
		for (int i = 0; i < 1000; i++)
		{
			for (int j = 0; j < 50; j++)
			{
				if (Owners[i].Shops.products[j].productPrice != 0)
				{
					cout << number << ". " << Owners[i].Shops.products[j].productName << "\t" << Owners[i].Shops.products[j].productPrice << "\t" << Owners[i].Shops.products[j].Category << "\t" << Owners[i].Shops.products[j].Quantity;
					number++;
				}
			}
		} chooseproduct();
		cout << "Do you Want to continue shopping : [ y / n ] ";
		cin >> flag;
	} while (flag == 'y' || flag == 'Y');

	cart();
}

void search()
{
	string name;
	cout << "Enter the Product's name: ";
	cin >> name;
	for (int i = 0; i < 1000; i++)
	{
		for (int j = 0; j < 50; j++)
		{
			if (name == Owners[i].Shops.products[j].productName)
			{
				info(i, j);
			}
			else
			{
				cout << "Out of Stock." << endl;
			}
		}
	}
}

void info(int i, int j)
{
	cout << Owners[i].Shops.products[j].productName << "\t" << Owners[i].Shops.products[j].productPrice << "\t" << Owners[i].Shops.products[j].Category << "\t" << Owners[i].Shops.products[j].Quantity;
	cout << "************" << endl;

}

void chooseproduct() {
	int searchnum, x, y;
	cout << " \n Enter The Number Of Product You Want To Add To Cart : ";
	cout << " Choice : ";
	cin >> searchnum;

	if (searchnum < 50) { y = searchnum - 1;	x = 0; }
	else if (searchnum >= 50 && searchnum < 100) { y = searchnum - 50;   x = 1; }
	else if (searchnum >= 100 && searchnum < 150) { y = searchnum - 100;  x = 2; }
	else if (searchnum >= 150 && searchnum < 200) { y = searchnum - 150;  x = 2; }
	else if (searchnum >= 200 && searchnum < 250) { y = searchnum - 200;  x = 3; }
	else if (searchnum >= 250 && searchnum < 300) { y = searchnum - 250;  x = 4; }
	else if (searchnum >= 300 && searchnum < 350) { y = searchnum - 300;  x = 5; }
	else if (searchnum >= 350 && searchnum < 400) { y = searchnum - 450;  x = 6; }
	else if (searchnum >= 400 && searchnum < 450) { y = searchnum - 400;  x = 7; }
	else if (searchnum >= 450 && searchnum < 500) { y = searchnum - 550;  x = 8; }
	else if (searchnum >= 500 && searchnum < 550) { y = searchnum - 500;  x = 9; }
	else if (searchnum >= 550 && searchnum < 600) { y = searchnum - 550;  x = 10; }
	else if (searchnum >= 600 && searchnum < 650) { y = searchnum - 600;  x = 11; }
	else if (searchnum >= 50 && searchnum < 700) { y = searchnum - 650;  x = 12; }
	else if (searchnum >= 700 && searchnum < 750) { y = searchnum - 700;  x = 13; }

	addtocart(x, y);

};

void addtocart(int x, int y) {

	int n;
	bool done = true;

	pcart[c.nump].buyproduct = Owners[x].Shops.products[y].productName;
	pcart[c.nump].price = Owners[x].Shops.products[y].productPrice;
	do {
		cout << "\n How many quantity do you want ?";
		cin >> n;
		if (n <= Owners[x].Shops.products[y].Quantity) {
			cout << "Your Product Added to cart " << endl;
			pcart[c.nump].qunatity = n;
			Owners[x].Shops.products[y].Quantity -= n;
			done = false;
		}
		else
			cout << " \n Your Quantity is not availble now in the stock !! We have ( " << Owners[x].Shops.products[y].Quantity << " ) only in the stock " << endl;
	} while (done);

	c.nump++;
}

void cart() {

	double total = 0;
	char s, d;
	int g, x = 1;
	cout << "********************** - YOUR CART - *********************" << endl;
	cout << " NAME \t  " << " QUNATITY \t  " << " PRICE \t  ";
	for (int i = 0; i < c.nump; i++) {
		pcart[i].subtotal = (pcart[i].qunatity  *  pcart[i].price);
		cout << x << '. ' << pcart[i].buyproduct << "\t" << pcart[i].qunatity << "\t" << pcart[i].subtotal << '$' << endl;
		total += pcart[i].subtotal;
		x++;
	}
	cout << " TOTAL :  " << total << endl;
	cout << " Do you want to delete any items ?  [[ y / n ]] :  ";
	cin >> d;
	switch (d)
	{
	case 'y':
	case 'Y':
		cout << "Enter the number of the product you want to delete  : ";
		cin >> g;
		pcart[g - 1] = { 0 };

	case 'n':
	case 'N':
		break;
	default:
		cout << "!!! Enter valid choice !!!" << endl;
	}
	total = 0;
	x = 1;
	cout << "Press .V. to View receipt" << endl << "Press .R. to Return shopping" << endl;
	cin >> s;
	switch (s)
	{
	case 'v':
	case 'V':
		cout << "********************* TOTAL ITEMS **********************\n" << endl;
		cout << " NAME \t  " << " QUNATITY \t  " << " PRICE \t  ";
		for (int i = 0; i < c.nump; i++) {
			if (pcart[i].price != 0) {
				pcart[i].subtotal = (pcart[i].qunatity  *  pcart[i].price);
				cout << x << ". " << pcart[i].buyproduct << "\t" << pcart[i].qunatity << "\t" << pcart[i].subtotal << '$' << endl;
				total += pcart[i].subtotal;
			}
		}
		cout << "********************** TOTAL PRICE *********************\n" << endl;
		cout << "Total price : " << total << '$';
		break;
	case 'R':
	case 'r':
		viewproducts();
		break;
	default:
		cout << "!!! Enter valid choice !!!" << endl;

	}

}

void registration() {
	int j,i;
	char choice;
	bool flag = true;
	
	
	for (int i = 0; i < maxShoppers; i++) {
		if (Shoppers[i].age == 0)
		{
			cout << "\n\nEnter your name : ";
			cin >> Shoppers[i].name;
			Shoppers[i].id = i + 1;
			cout << "\nYour ID is : " << Shoppers[i].id << endl;

			do {
				char a;
				cout << endl << "Enter a password of at least 6 digits" << endl;
				cout << "Enter your password : ";
				for (j = 0; j < maxPass;)
				{
					a = _getch();
					if ((a >= 'a'&&a <= 'z') || (a >= 'A'&&a <= 'Z') || (a >= '0'&&a <= '9'))
					{
						Shoppers[j].pass[j] = a;
						++j;
						cout << "*";
					}
					if (a == '\b'&&j >= 1)
					{
						cout << "\b \b";
						--j;
					}
					if (a == '\r')
					{
						Shoppers[i].pass[j] = '\0';
						break;
					}
					Shoppers[i].passnum = j;
				}

			} while (j <= 5);
			cout << endl << "\nEnter Your Age : ";
			cin >> Shoppers[i].age;
			cout << "\nEnter Your Gender [ M / F ] : ";
			while (flag)
			{
				cin >> choice;
				if (choice == 'M' || choice == 'm')
				{
					Shoppers[i].gender = "Male";
					flag = false;
				}
				else if (choice == 'F' || choice == 'f')
				{
					Shoppers[i].gender = "Female";
					flag = false;
				}
				else
				{
					cout << "Please Enter A Valid Gender [ M / F ] : ";
				}
			}
			Shoppers[i].gender = choice;
			cout << "\nEnter Your Address: \n\n";
			cout << " City : ";
			cin >> Shoppers[i].address[i].City;
			cout << " Country : ";
			cin >> Shoppers[i].address[i].Country;
			cout << endl << "\n ************  You Have Registered Successfully ************ \n" << endl;
			break;
		}
	}
		
}

int login() {
	int j;
	bool flag = true;
	int LogID, i;
	char LogPass[maxPass];
	
	cout << " \n Enter Your Data\n";
	cout << endl << "Enter your ID : ";
	cin >> LogID;
	do {
		char a;
		cout << endl << "Enter a Password of at least 6 digits." << endl;
		cout << endl << "Enter your Password : ";
		for (j = 0;;)
		{
			a = _getch();
			if ((a >= 'a'&&a <= 'z') || (a >= 'A'&&a <= 'Z') || (a >= '0'&&a <= '9'))
			{
				LogPass[j] = a;
				++j;
				cout << "*";
			}
			if (a == '\b'&&j >= 1)
			{
				cout << "\b \b";
				--j;
			}
			if (a == '\r')
			{
				LogPass[j] = '\0';
				break;
			}
		}
	} while (j <= 5);


	for (i = 0; i < maxShoppers; i++)
	{
		if (j > Shoppers[i].passnum || j < Shoppers[i].passnum) {
			flag = false;
		}
		else if (j == Shoppers[i].passnum) {
			for (int x = 0; x < Shoppers[i].passnum; x++)
			{
				if (LogPass[x] != Shoppers[i].pass[x])
				{
					flag = false;
				}
			}
		}
		if (LogID == Shoppers[i].id && (flag))
		{
			cout << "\nYou have successfully Logged In. \n";
			break;
		}
	}
	if (flag == false)
	{
		cout << "\nEither the ID or Password is incorrect" << endl;
		i = maxShoppers;
	}
	return i;
}

void update(int j) {

	char editchoices, gender;
	int regedit;
	cout << "Editing your information\n";
	cout << "Would you like to edit your registration data (Y/N) ? : ";
	cin >> editchoices;
	if (editchoices == 'Y' || editchoices == 'y') {
		cout << "What do you want to edit ? : \n\n" << endl;
		cout << "1-Name \n2-Password \n3-Age \n4-Gender \n5-Address" << endl;
		cout << "Choice : "; cin >> regedit;
		switch (regedit) {
		case 1: cout << "New Name : ";
			cin >> Shoppers[j].name;
			break;

		case 2: cout << "New Password :";
			cin >> Shoppers[j].pass;
			break;

		case 3: cout << "New Age : ";
			cin >> Shoppers[j].age;
			break;

		case 4: cout << "New Gender(Female/male) : ";
			cin >> gender;
			if (gender == 'M' || gender == 'm')
			{
				Shoppers[j].gender = "Male";
			}
			else if (gender == 'F' || gender == 'f')
			{
				Shoppers[j].gender = "Female";
			}
			else { cout << "Error"; }
			break;

		case 5: cout << "New Address : ";
			cout << "City :  ";
			cin >> Shoppers[j].address[j].City;
			cout << "Country : ";
			cin >> Shoppers[j].address[j].Country;
			break;

		default: cout << "Invalid";
			break;
		}
	}
	else { cout << "Invalid Choice !!!!"; }
}

void SLchoice()
{
	char c;
	char Loginchoice;
	cout << "Do you want to register or login , (R/L)? : ";
	cin >> Loginchoice;
	do {
		switch (Loginchoice)
		{
		case 'l':
		case 'L': LogIndex = login();
			break;
		case'r':
		case'R': registration();

		default: cout << "You may continue\n";
			break;
		}
		if (LogIndex == maxShoppers) {
			cout << "Would you like to try again, (Y/N)? : ";
			cin >> c;
		}
		else {
			c = 'n';
		}
	} while (c == 'y' || c == 'Y');
}

void SEchoice()
{
	char Editchoice;
	cout << "Do you want to edit your data , (Y/N)? : ";
	cin >> Editchoice;
	switch (Editchoice)
	{
	case'y':
	case'Y':update(LogIndex);
		break;
	default:cout << "You may continue\n";
		break;
	}
}

void del(int j) {
	char choice;
	cout << endl << "Are you sure you want to Delete your Account? (Y/N) ? : ";
	cin >> choice;
	switch (choice) {
	case'y':
	case'Y':

		Shoppers[j].name = { 0 };
		Shoppers[j].id = 0;
		for (int i = 0; i < 1000; i++) {
			Shoppers[j].pass[i] = { 0 };
		}
		Shoppers[j].age = 0;
		Shoppers[j].gender = { 0 };
		Shoppers[j].address[j] = { 0 };

		cout << "Your Account has been Deleted." << endl;
		break;
	default:
		break;

	}

}
