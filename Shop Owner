#include<iostream>
#include<conio.h>
#include<string>

using namespace std;
const int maxOwners = 50, maxProds = 15, maxPass = 32;
int LogIndex;

struct Product
{
	string productName = { 0 };
	double productPrice = 0;
	string Category = { 0 };
	int Quantity = 0;
};
struct Shop
{
	string ShopName;
	string ShopAddress;
	string Category;
	Product products[maxProds];
};
struct Owner
{
	string Name;
	int ID;
	char Password[maxPass];
	int Age;
	string Gender;
	string Address;
	Shop Shops;
} Owners[maxOwners];


int RegOwner();
void RegShop(int);
void OLchoice();
void OEchoice();
int Lowner();
void Eowner(int);
void ProdChoice();
void addProds(int);
void removeProds(int);
void viewProds(int);
void RegChoice();
void removeReg(int);

int main()
{
	RegChoice();
	OLchoice();
	OEchoice();
	ProdChoice();

	return 0;

}

void RegChoice()
{
	int RegIndex;
	char choice;
	do
	{
		cout << "Would you like to Register? (Y/N) : ";
		cin >> choice;
		if (choice == 'y' || choice == 'Y')
		{
			RegIndex = RegOwner();
			RegShop(RegIndex);
			cout << "Would you like to Register again? (Y/N) : ";
			cin >> choice;
		}
	} while (choice == 'Y' || choice == 'y');
}

int RegOwner()
{
	int i, j;
	char gender;
	bool flag = true;
	for (j = 0; j < maxOwners; j++)
	{
		if (Owners[j].Age == 0)
		{
			cout << "Enter your name: ";
			cin >> Owners[j].Name;
			Owners[j].ID = j + 1;
			cout << "your ID is :" << Owners[j].ID << endl << endl;

			do
			{
				cout << "Enter your password of at least 6 digits. : ";

				char a;
				for (i = 0; i < maxPass;)
				{
					a = _getch();
					if ((a >= 'a'&&a <= 'z') || (a >= 'A'&&a <= 'Z') || (a >= '0'&&a <= '9'))

					{
						Owners[j].Password[i] = a;
						++i;
						cout << "*";
					}
					if (a == '\b'&&i >= 1)

					{
						cout << "\b \b";
						--i;
					}
					if (a == '\r')
					{
						Owners[j].Password[i] = '\0';
						break;
					}
				}
			} while (i <= 5);
			cout << endl;
			cout << "Enter your age : ";
			cin >> Owners[j].Age;
			cout << "Enter your gender (M/F) : ";
			while (flag)
			{
				cin >> gender;
				if (gender == 'M' || gender == 'm')
				{
					Owners[j].Gender = "Male";
					flag = false;
				}
				else if (gender == 'F' || gender == 'f')
				{
					Owners[j].Gender = "Female";
					flag = false;
				}
				else
				{
					cout << "Error , Please enter a valid gender(M/F)";
				}
			}
			Owners[j].Gender = gender;
			cout << "Enter your address : ";
			cin >> Owners[j].Address;
			cout << "You have registered successfully" << endl << endl;
			break;
		}
	}
	return j;
}

void RegShop(int i)
{

	string shopName;
	bool flag = true;
	cout << "Enter your shop name: ";
	cin >> shopName;
	for (int j = 0; j < maxOwners; j++)
	{
		if (shopName == Owners[j].Shops.ShopName)
		{
			cout << "This Shop is already taken";
			flag = false;
			break;
		}

	}
	if (flag)
	{
		Owners[i].Shops.ShopName = shopName;
		cout << "Enter your shop's address : ";
		cin >> Owners[i].Shops.ShopAddress;
		cout << "Enter your shop's category : ";
		cin >> Owners[i].Shops.Category;
		cout << endl;
	}
}

int Lowner()
{
	int j;
	bool flag1 = false, flag2 = false;
	int LogID, i;
	char LogPass[maxPass];
	cout << "Please enter your Login Data" << endl;
	cout << "ID :";
	cin >> LogID;
	do
	{
		cout << "Enter a Password of at least 6 digits." << endl;
		cout << "Password : ";
		char a;
		for (j = 0;;)
		{
			a = _getch();
			if ((a >= 'a'&&a <= 'z') || (a >= 'A'&&a <= 'Z') || (a >= '0'&&a <= '9'))
			{
				LogPass[j] = a;
				++j;
				cout << "*";
			}
			if (a == '\b'&&j >= 1)
			{
				cout << "\b \b";
				--j;
			}
			if (a == '\r')
			{
				LogPass[j] = '\0';
				break;
			}
		}

	} while (j <= 5);

	for (i = 0; i < maxOwners; i++)
	{
		for (int j = 0; j < 32; j++)
		{
			if (LogPass[j] == Owners[i].Password[j])
			{
				flag2 = true;
			};
		}

		if (LogID == Owners[i].ID && (flag2))
		{
			cout << "\nYou have successfully Logged In. \n";
			flag1 = true;
			break;
		}
	}
	if (flag1 == false && flag2 == false)
	{
		cout << "\nEither the ID or Password is incorrect" << endl;
		i = maxOwners;
	}
	return i;
}

void Eowner(int j) {
	char editchoice, gender, continuechoice;
	int regedit, shopEdit;
	bool flag1 = true, flag2 = true;
	cout << "Editing your information\n";
	do {
		cout << "Would you like to edit your registration data , your Shop data or delete your account (R/S/D) ? ";
		cin >> editchoice;
		if (editchoice == 'R' || editchoice == 'r')
		{
			cout << "What do you want to edit ? " << endl;
			cout << "1-Name \n2-Password \n3-Age \n4-Gender \n5-Address" << endl;
			cout << "Choice : ";
			cin >> regedit;
			switch (regedit)
			{
			case 1:
				cout << "New Name : ";
				cin >> Owners[j].Name;
				break;

			case 2:
				cout << "New Password : ";
				cin >> Owners[j].Password;
				break;

			case 3:
				cout << "New Age : ";
				cin >> Owners[j].Age;
				break;

			case 4:
				cout << "New Gender(M/F) : ";
				cin >> gender;
				while (flag1)
				{
					cin >> gender;
					if (gender == 'M' || gender == 'm')
					{
						Owners[j].Gender = "Male";
						flag1 = false;
					}
					else if (gender == 'F' || gender == 'f')
					{
						Owners[j].Gender = "Female";
						flag1 = false;
					}
					else
					{
						cout << "Please enter a valid gender(M/F)";
					}
				}

			case 5:
				cout << "New Address : ";
				cin >> Owners[j].Address;
				break;
			default:
				cout << "Invalid";
				break;
			}
		}
		else if (editchoice == 'S' || editchoice == 's')
		{
			cout << "What do you want to edit ?" << endl;
			cout << "1-Shop Name \n2-Address \n3-Category \n";
			cout << "Choice: "; cin >> shopEdit;
			switch (shopEdit)
			{
			case 1:
				cout << "Shop Name : ";
				cin >> Owners[j].Shops.ShopName;
				break;
			case 2:
				cout << "Shop Address : ";
				cin >> Owners[j].Shops.ShopAddress;
				break;
			case 3:
				cout << "Category : ";
				cin >> Owners[j].Shops.Category;
				break;
			default:
				cout << "Invalid Input";
				break;
			}
		}
		else if (editchoice == 'D' || editchoice == 'd')
		{
			removeReg(LogIndex);
		}
		else
		{
			cout << "Invalid Choice\n";
		}
		while (flag2)
		{
			cout << "Would you like to continue (Y/N) ?";
			cin >> continuechoice;
			if (continuechoice == 'Y' || continuechoice == 'y' || continuechoice == 'N' || continuechoice == 'n')
			{
				flag2 = false;
			}
			else
			{
				cout << "Invalid Input";
			}
		}
	}while (continuechoice == 'Y' || continuechoice == 'y');
}

void OLchoice()
	{
		char c;
		char Logchoice;
		cout << "Do you want to login , (Y/N)? ";
		cin >> Logchoice;
		do
		{
			switch (Logchoice)
			{
			case 'y':
			case 'Y':
				LogIndex = Lowner();
				break;
			default:
				cout << "You may continue";
				break;
			}
			if (LogIndex == maxOwners)
			{
				cout << "Would you like to try again, (Y/N)? ";
				cin >> c;
			}
			else
			{
				c = 'n';
			}
		} while (c == 'y' || c == 'Y');
	}

void OEchoice()
	{
		char Editchoice;
		cout << "Do you want to edit your data , (Y/N)? ";
		cin >> Editchoice;
		switch (Editchoice)
		{
		case'y':
		case'Y':
			Eowner(LogIndex);
			break;
		default:
			cout << "You may continue";
			break;
		}
	}

void ProdChoice()
	{
		char choice;
		do
		{
			cout << "To add a product enter A. To remove a product enter R. To view your products enter V. : ";
			char choices;
			cin >> choices;
			switch (choices)
			{
			case 'a':
			case 'A':
				addProds(LogIndex);
				break;
			case 'r':
			case 'R':
				removeProds(LogIndex);
				break;
			case 'v':
			case 'V':
				viewProds(LogIndex);
				break;
			default:
				cout << "Invalid answer";
			}
			cout << "Do you want to continue (Y/N) : ";
			cin >> choice;
			cout << endl;
		} while (choice == 'y' || choice == 'Y');
	}

void addProds(int j)
	{
		do
		{

			char choice;

			for (int i = 0; i <= maxProds; i++)
			{

				if (Owners[j].Shops.products[i].productPrice != 0)
				{
					continue;
				}

				else if (Owners[j].Shops.products[i].productPrice == 0)
				{

					cout << "Product's name : ";
					cin >> Owners[j].Shops.products[i].productName;

					cout << "Product's Price : $";
					cin >> Owners[j].Shops.products[i].productPrice;

					cout << "Product's Category : ";
					Owners[j].Shops.products[i].Category = Owners[j].Shops.Category;
					cout << Owners[j].Shops.products[i].Category << endl;

					cout << "Product's Quantity : ";
					cin >> Owners[j].Shops.products[i].Quantity;

					break;
				}
			}
			cout << "Do you want to enter a product ? (Y / N) : ";
			cin >> choice;

			if (choice == 'N' || choice == 'n')
			{
				break;
			}
			else if (choice == 'Y' || choice == 'y')
			{
				continue;
			}
		} while (true);
	}

void removeProds(int j)
	{
		int i;
		bool same = false;
		string name;
		char choice, continuechoice;
		do
		{
			cout << "What is the name of the product you want to remove : ";
			cin >> name;
			cout << "Are you sure you want to remove this product (Y/N) ?";
			cin >> continuechoice;
			if (continuechoice == 'Y' || continuechoice == 'y')
			{
				for (i = 0; i < maxProds; i++)
				{
					if (name == Owners[j].Shops.products[i].productName)
					{
						same = true;
						break;
					}
				}
				if (same == true)
				{
					Owners[j].Shops.products[i].productName = { 0 };
					Owners[j].Shops.products[i].productPrice = 0;
					Owners[j].Shops.products[i].Quantity = 0;
					Owners[j].Shops.products[i].Category = { 0 };
				}
				else if (same == false)
					cout << "This product doesn't exist. \n";
				cout << "\nDo you want to remove another product? (Y/N) : ";
				cin >> choice;
				if (choice == 'N' || choice == 'n')
				{
					break;
				}

				else if (choice == 'Y' || choice == 'y')
				{
					continue;
				}
				else { 
					break; 
				}
			}
		} while (true);
	
	}

void viewProds(int j)
		{
			char choice;
			do
			{
				cout << "Product's Name \t Product's Price \t Product's Category \t Product's Quantity \n";
				for (int i = 0; i < maxProds; i++)
				{
					if (Owners[j].Shops.products[i].productPrice != 0)
					{
						cout << Owners[j].Shops.products[i].productName << "\t \t " << Owners[j].Shops.products[i].productPrice << "$" << "\t \t \t " << Owners[j].Shops.products[i].Category << "\t  \t " << Owners[j].Shops.products[i].Quantity << endl;
					}
				}
				cout << "Do you want to view your products? (Y/N) : ";
				cin >> choice;
				if (choice == 'n' || choice == 'N')
				{
					break;
				}
				else if (choice == 'y' || choice == 'Y')
				{
					continue;
				}
			} while (true);
		}

void removeReg(int j)
		{
			char choice;
			cout << "You are about to delete your account , are you sure ? (Y/N)";
			cin >> choice;
			switch (choice)
			{

			case 'y':
			case 'Y':
				Owners[j].Name = { 0 };
				Owners[j].ID = 0;
				for (int i = 0; i < maxPass; i++)
				{
					Owners[j].Password[i] = { 0 };
				}
				Owners[j].Age = 0;
				Owners[j].Gender = { 0 };
				Owners[j].Address = { 0 };
				Owners[j].Shops.ShopName = { 0 };
				Owners[j].Shops.Category = { 0 };
				Owners[j].Shops.ShopAddress = { 0 };
				for (int i = 0; i < maxProds; i++)
				{
					Owners[j].Shops.products[i] = { 0 };
				}
				cout << "Your account has been successfully deleted" << endl;
				break;
			default:
				break;
			}
		}
